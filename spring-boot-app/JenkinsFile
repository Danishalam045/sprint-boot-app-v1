pipeline {
    agent {
        docker {
            // === My updated build environment ===
            image 'maven:3.9.6-eclipse-temurin-17'
            args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
        }
    }

    environment {
        SONAR_URL = "http://13.234.217.69:9000"
        DOCKER_IMAGE = "danish045/ultimate-cicd:${BUILD_NUMBER}"
        GIT_REPO_NAME = "sprint-boot-app-v1"
        GIT_USER_NAME = "Danishalam045"
    }

    stages {

        stage('Checkout') {
            steps {
                sh 'echo "=== Checkout Stage ==="'
                git branch: 'main', url: 'https://github.com/Danishalam045/sprint-boot-app-v1.git'

                // --- Original Code (Commented) ---
                // sh 'echo passed'
                // git branch: 'main', url: 'https://github.com/Danishalam045/sprint-boot-app-v1.git'
            }
        }

        stage('Build and Test') {
            steps {
                sh 'ls -ltr'
                sh 'cd spring-boot-app && mvn clean package'

                // --- Original Code (Commented) ---
                // sh 'ls -ltr'
                // sh 'cd spring-boot-app && mvn clean package'
            }
        }

        stage('Static Code Analysis') {
            steps {
                withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
                    sh '''
                        cd spring-boot-app
                        mvn sonar:sonar \
                          -Dsonar.login=$SONAR_AUTH_TOKEN \
                          -Dsonar.host.url=${SONAR_URL}
                    '''
                }

                // --- Original Code (Commented) ---
                // environment {
                //     SONAR_URL = "http://13.234.217.69:9000"
                // }
                // withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
                //     sh 'cd spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
                // }
            }
        }

        stage('Build and Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-cred', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh '''
                        echo "=== Building Docker Image ==="
                        cd spring-boot-app
                        docker build -t ${DOCKER_IMAGE} .
                        echo "=== Logging in to Docker Hub ==="
                        echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
                        echo "=== Pushing Docker Image ==="
                        docker push ${DOCKER_IMAGE}
                    '''
                }

                // --- Original Code (Commented) ---
                // environment {
                //     DOCKER_IMAGE = "danish045/ultimate-cicd:${BUILD_NUMBER}"
                //     REGISTRY_CREDENTIALS = credentials('docker-cred')
                // }
                // script {
                //     sh 'cd spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
                //     def dockerImage = docker.image("${DOCKER_IMAGE}")
                //     docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
                //         dockerImage.push()
                //     }
                // }
            }
        }

        stage('Update Deployment File') {
            steps {
                withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                    sh '''
                        git config user.email "alamd4228@gmail.com"
                        git config user.name "Danishalam045"
                        sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" spring-boot-app-manifests/deployment.yml
                        git add spring-boot-app-manifests/deployment.yml
                        git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                        git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                    '''
                }

                // --- Original Code (Commented) ---
                // environment {
                //     GIT_REPO_NAME = "sprint-boot-app-v1"
                //     GIT_USER_NAME = "Danishalam045"
                // }
                // withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                //     sh '''
                //         git config user.email "alamd4228@gmail.com"
                //         git config user.name "Danishalam045"
                //         BUILD_NUMBER=${BUILD_NUMBER}
                //         sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" spring-boot-app-manifests/deployment.yml
                //         git add spring-boot-app-manifests/deployment.yml
                //         git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                //         git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                //     '''
                // }
            }
        }
    }
}

